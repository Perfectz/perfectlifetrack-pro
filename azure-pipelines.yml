trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: NODE_VERSION
    value: '18.x'

stages:
  - stage: Build
    displayName: 'Build and Test'
    jobs:
      - job: Frontend
        displayName: 'Build Frontend'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(NODE_VERSION)
            displayName: 'Install Node.js'

          - script: |
              cd frontend
              npm ci
              npm run build
            displayName: 'Build Frontend'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'frontend/build'
              ArtifactName: 'frontend'
              publishLocation: 'Container'

      - job: Backend
        displayName: 'Build Backend'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(NODE_VERSION)
            displayName: 'Install Node.js'

          - script: |
              cd backend
              npm ci
              npm run build
            displayName: 'Build Backend'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'backend/dist'
              ArtifactName: 'backend'
              publishLocation: 'Container'

  - stage: Test
    displayName: 'Run Tests'
    dependsOn: Build
    jobs:
      - job: FrontendTests
        displayName: 'Run Frontend Tests'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(NODE_VERSION)
            displayName: 'Install Node.js'

          - script: |
              cd frontend
              npm ci
              npm test
            displayName: 'Run Frontend Tests'

      - job: BackendTests
        displayName: 'Run Backend Tests'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(NODE_VERSION)
            displayName: 'Install Node.js'

          - script: |
              cd backend
              npm ci
              npm test
            displayName: 'Run Backend Tests'
