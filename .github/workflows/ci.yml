name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint

      - name: Check code formatting with Prettier
        working-directory: ./frontend
        run: npm run format:check

      - name: Build Docker image for frontend
        run: docker build -t lifetracker-frontend:dev ./frontend

      - name: Check for backend code
        id: check-backend
        run: |
          if [ -f "./backend/package.json" ]; then
            echo "backend_exists=true" >> $GITHUB_OUTPUT
          else
            echo "backend_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Install backend dependencies
        if: steps.check-backend.outputs.backend_exists == 'true'
        working-directory: ./backend
        run: npm ci

      - name: Run ESLint on backend (if available)
        if: steps.check-backend.outputs.backend_exists == 'true'
        working-directory: ./backend
        run: npm run lint || echo "Backend linting not configured, skipping"

      - name: Build backend Docker image (if available)
        if: steps.check-backend.outputs.backend_exists == 'true'
        run: docker build -t lifetracker-backend:dev ./backend || echo "Backend Dockerfile not found, skipping"

      - name: Test Docker Compose
        run: |
          if [ -f "docker-compose.yml" ]; then
            docker-compose config -q
            echo "Docker Compose configuration is valid"
          else
            echo "No docker-compose.yml found, skipping"
          fi 