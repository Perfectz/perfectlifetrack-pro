apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: perfectltp
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: perfectltp
      tier: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: perfectltp
        tier: backend
    spec:
      containers:
      - name: backend
        image: perfectltp/backend:latest  # Replace with your actual container registry and image
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        envFrom:
        - configMapRef:
            name: perfectltp-config
        - secretRef:
            name: perfectltp-secrets
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 20
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      # Pod Disruption Budget ensures high availability
      # Use anti-affinity rules to spread replicas across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - perfectltp
                - key: tier
                  operator: In
                  values:
                  - backend
              topologyKey: "kubernetes.io/hostname" 