# Use Node.js 20 Alpine as base image
FROM node:20-alpine

# Set working directory
WORKDIR /app

# Copy package files first to leverage Docker layer caching
COPY package*.json ./

# Install dependencies
RUN npm install

# Install specific dependencies that might be missing
RUN npm install uuid@9.0.1 bcryptjs @types/bcryptjs --save

# Copy all source files
COPY . .

# Build TypeScript code
RUN npm run build

# Create start.sh script and make it executable
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "Starting backend application..."' >> /app/start.sh && \
    echo 'if [ "$NODE_ENV" = "production" ]; then' >> /app/start.sh && \
    echo '  echo "Starting in production mode..."' >> /app/start.sh && \
    echo '  exec node dist/index.js' >> /app/start.sh && \
    echo 'else' >> /app/start.sh && \
    echo '  echo "Starting in development mode..."' >> /app/start.sh && \
    echo '  exec npm run dev' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    chmod +x /app/start.sh

# Expose the port
EXPOSE 3001

# Set environment variables
ENV NODE_ENV=development
ENV USE_MOCK_DATABASE=true

# Start the application using the script
CMD ["/bin/sh", "/app/start.sh"] 