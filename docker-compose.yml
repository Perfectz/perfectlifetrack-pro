# version: "3.9" (removed as per Docker Compose deprecation warning)

services:
  # Unified frontend container (builds and serves the app)
  app:
    build:
      context: ./frontend
      dockerfile: Dockerfile.unified
    container_name: lifetrack-app
    ports:
      - "${APP_PORT:-80}:80"
      - "${DEV_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_REACT_APP_AZURE_CLIENT_ID=${AZURE_CLIENT_ID:-d9764c39-1eb9-4963-83a0-e8ba859c8965}
      - VITE_REACT_APP_AZURE_AUTHORITY=https://login.microsoftonline.com/78e9993f-a208-4c38-9d9d-6b15f0d2407d
      - VITE_REACT_APP_AZURE_REDIRECT_URI=${AZURE_REDIRECT_URI:-http://localhost:3000}
      - VITE_API_URL=http://backend:3001
      - ROLLUP_NATIVE_MODULES=false
      - ROLLUP_SKIP_NODEJS_NATIVE=true
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  # Development mode service (uses the same image but with different env vars)
  app-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.unified
    container_name: lifetrack-app-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_REACT_APP_AZURE_CLIENT_ID=${AZURE_CLIENT_ID:-d9764c39-1eb9-4963-83a0-e8ba859c8965}
      - VITE_REACT_APP_AZURE_AUTHORITY=https://login.microsoftonline.com/78e9993f-a208-4c38-9d9d-6b15f0d2407d
      - VITE_REACT_APP_AZURE_REDIRECT_URI=${AZURE_REDIRECT_URI:-http://localhost:3000}
      - VITE_API_URL=http://backend:3001
      - ROLLUP_NATIVE_MODULES=false
      - ROLLUP_SKIP_NODEJS_NATIVE=true
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      # Mount source for hot-reloading in development, but use a named volume for node_modules
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    profiles: ["dev"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: lifetrack-backend
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3001
      # Add Cosmos DB connection and configuration
      - COSMOS_DB_ENDPOINT=${COSMOS_DB_ENDPOINT:-https://localhost:8081}
      - COSMOS_DB_KEY=${COSMOS_DB_KEY:-dummy-key-for-development}
      - COSMOS_DB_DATABASE=${COSMOS_DB_DATABASE:-lifetracker}
      # Add other environment variables
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID:-d9764c39-1eb9-4963-83a0-e8ba859c8965}
      - AZURE_AUTHORITY=${AZURE_AUTHORITY:-https://login.microsoftonline.com/78e9993f-a208-4c38-9d9d-6b15f0d2407d}
      # Use mock database in Docker environment
      - USE_MOCK_DATABASE=true
    volumes:
      - backend_node_modules:/app/node_modules
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  # Development backend option
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: lifetrack-backend-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      # Add Cosmos DB connection and configuration for dev environment
      - COSMOS_DB_ENDPOINT=${COSMOS_DB_ENDPOINT:-https://localhost:8081}
      - COSMOS_DB_KEY=${COSMOS_DB_KEY:-dummy-key-for-development}
      - COSMOS_DB_DATABASE=${COSMOS_DB_DATABASE:-lifetracker}
      # Add other environment variables
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID:-d9764c39-1eb9-4963-83a0-e8ba859c8965}
      - AZURE_AUTHORITY=${AZURE_AUTHORITY:-https://login.microsoftonline.com/78e9993f-a208-4c38-9d9d-6b15f0d2407d}
    volumes:
      - ./backend:/app    # Mount for development hot-reload
      - backend_dev_node_modules:/app/node_modules
    restart: unless-stopped
    profiles: ["dev"]

  # New debug backend service
  backend-debug:
    build:
      context: ./backend
      dockerfile: Dockerfile.debug
    container_name: lifetrack-backend-debug
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      # Add Cosmos DB connection and configuration for dev environment
      - COSMOS_DB_ENDPOINT=${COSMOS_DB_ENDPOINT:-https://localhost:8081}
      - COSMOS_DB_KEY=${COSMOS_DB_KEY:-dummy-key-for-development}
      - COSMOS_DB_DATABASE=${COSMOS_DB_DATABASE:-lifetracker}
      # Add other environment variables
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID:-d9764c39-1eb9-4963-83a0-e8ba859c8965}
      - AZURE_AUTHORITY=${AZURE_AUTHORITY:-https://login.microsoftonline.com/78e9993f-a208-4c38-9d9d-6b15f0d2407d}
      # Use mock database for testing
      - USE_MOCK_DATABASE=true
    volumes:
      - ./backend:/app
      - backend_debug_node_modules:/app/node_modules
    restart: unless-stopped

# Volumes for development
volumes:
  backend_node_modules: 
  backend_dev_node_modules:
  backend_debug_node_modules:
  frontend_node_modules: