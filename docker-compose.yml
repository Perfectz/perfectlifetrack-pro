version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development # Specify development stage
    container_name: lifetrack-frontend
    ports:
      - "3000:3000"   # Map Vite dev server port to host
    environment:
      - VITE_REACT_APP_AZURE_CLIENT_ID=${AZURE_CLIENT_ID:-d9764c39-1eb9-4963-83a0-e8ba859c8965}
      - VITE_REACT_APP_AZURE_AUTHORITY=https://login.microsoftonline.com/78e9993f-a208-4c38-9d9d-6b15f0d2407d
      - VITE_REACT_APP_AZURE_REDIRECT_URI=http://localhost:3000
      - VITE_API_URL=http://backend:3001
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Production frontend option (commented out by default)
  # frontend-prod:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #     target: production
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     - backend

  backend:
    image: node:20-alpine
    container_name: lifetrack-backend
    working_dir: /app
    volumes:
      - ./backend:/app    # Mount backend source code
      - backend_node_modules:/app/node_modules
    ports:
      - "3001:3001"
    command: >
      sh -c "if [ -f package.json ]; then 
              npm install && npm run dev; 
             else 
              # Create a simple placeholder API if no backend exists yet
              echo '{\"dependencies\":{\"express\":\"^4.18.2\",\"cors\":\"^2.8.5\",\"nodemon\":\"^3.0.1\"}, \"scripts\":{\"dev\":\"nodemon server.js\"}}' > package.json &&
              echo 'const express = require(\"express\"); const cors = require(\"cors\"); const app = express(); app.use(cors()); app.get(\"/api/health\", (req, res) => { res.json({ status: \"ok\", message: \"Backend API is running\" }); }); app.listen(3001, () => console.log(\"Backend server running on port 3001\"));' > server.js &&
              npm install && npm run dev; 
             fi"
    environment:
      - NODE_ENV=development
      - PORT=3001
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  backend_node_modules: 